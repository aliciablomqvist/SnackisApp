@page
@model CreatePostModel
@using SnackisApp.Models
@inject SignInManager<SnackisUser> SignInManager
@inject UserManager<SnackisUser> UserManager
@{
    ViewData["Title"] = "Create Post";
    var user = await UserManager.GetUserAsync(User);
}

<head>
    <link rel="stylesheet" href="~/css/post.css" asp-append-version="true" />
</head>

<div class="text-center">
    <h2 class="display-4">Create Post</h2>
</div>

<div class="row create-post-form-container">
    @if (SignInManager.IsSignedIn(User))
    {
        <form method="post" enctype="multipart/form-data" class="create-post-form">
            <div class="form-group">
                <label asp-for="Post.Title"></label>
                <input asp-for="Post.Title" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Post.Content"></label>
                <textarea asp-for="Post.Content" class="form-control" cols="40" rows="5"></textarea>
            </div>
            <div class="form-group">
                <label asp-for="Post.CategoryId"> Choose Category</label>
                <select asp-for="Post.CategoryId" class="form-control"
                    asp-items="@(new SelectList((System.Collections.IEnumerable)ViewData["Categories"], "Value", "Text"))"></select>
            </div>
            <div class="form-group">
                <label asp-for="Post.SubCategoryId">Choose Subcategory</label>
                <select asp-for="Post.SubCategoryId" class="form-control"
                    asp-items="@(new SelectList((System.Collections.IEnumerable)ViewData["SubCategories"], "Value", "Text"))"></select>
            </div>
            <div class="form-group">
                <label asp-for="UploadedImage">Upload an image</label>
                <input type="file" asp-for="UploadedImage" class="form-control-file" />
            </div>
            <button type="submit" class="btn btn-success">Save post</button>
        </form>
    }
    else
    {
        <div class="alert alert-danger">To write your own posts, you need to be logged in.</div>
    }
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }
</div>
